name: Auto UF and PR

on:
  schedule:
    - cron:  '0 */8 * * *'

jobs:
  updatefork:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.5.3
        with:
          repository: Zhangfanyu1222/XQuickEnergy
      - name: Backup .gitignore
        run: cp .gitignore .gitignore_backup
      - name: Fetch changes from upstream branch
        run: |
          git remote add upstream https://github.com/constanline/XQuickEnergy.git
          git fetch upstream master:upstream-master
      - name: Check for updates
        run: |
          git diff --quiet upstream-master HEAD || true
          if [ $? -eq 0 ]; then
            echo "No updates found."
            echo "UPDATES_FOUND=false" >> $GITHUB_ENV
          else
            echo "Updates found."
            echo "UPDATES_FOUND=true" >> $GITHUB_ENV
          fi
      - name: Reset the default branch with upstream changes
        if: env.UPDATES_FOUND == 'true'
        run: git reset --hard upstream-master
      - name: Get latest commit message and author
        run: |
          LATEST_COMMIT_AUTHOR=$(git log -1 --pretty=format:"%an")
          LATEST_COMMIT_TITLE=$(git log -1 --pretty=format:"%s")
          LATEST_COMMIT_CONTENT=$(git log -1 --pretty=format:"%b")
          echo "AUTHOR=$LATEST_COMMIT_AUTHOR" >> $GITHUB_ENV
          echo "TITLE=$LATEST_COMMIT_TITLE" >> $GITHUB_ENV
          echo "CONTENT=$LATEST_COMMIT_CONTENT" >> $GITHUB_ENV
      - name: Create Pull Request
        if: env.UPDATES_FOUND == 'true'
        id: cpr
        uses: peter-evans/create-pull-request@v5.0.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          committer: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          branch: upstream-changes
          delete-branch: true
          title: "Merge branch 'constanline:master' into master"
          body: "Author: ${{ env.AUTHOR }}\nMESSAGE: ${{ env.TITLE }} | ${{ env.CONTENT }}"
      - name: Enable Pull Request Automerge
        if: steps.cpr.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: rebase
      - name: Restore .gitignore
        if: env.UPDATES_FOUND == 'true'
        run: mv .gitignore_backup .gitignore
      - name: Auto approve
        if: steps.cpr.outputs.pull-request-operation == 'created'
        run: gh pr review --approve "${{ steps.cpr.outputs.pull-request-number }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
